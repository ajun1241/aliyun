<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.modcreater.tmdao.mapper.EventMapper">

    <sql id="Base_Column_List">
        eventId,userId,eventName,startTime,endTime,address,level,flag,
        remarks,person,repeatTime,isOverdue,remindTime,day,month,year,type
    </sql>

    <insert id="uploadingEvents" parameterType="com.modcreater.tmbeans.pojo.SingleEvent">
            insert into singleevent values
            (#{eventid} ,
            #{userid},
            #{eventname},
            #{starttime},
            #{endtime},
            #{address},
            #{level},
            #{flag},
            #{person},
            #{remarks},
            #{repeaTtime},
            #{isOverdue},
            #{remindTime},
            #{day},
            #{month},
            #{year},
            #{type})
    </insert>

    <update id="withdrawEventsByUserId">
        update singleevent set isOverdue = 2 where eventId = #{eventid}
    </update>

    <update id="alterEventsByUserId">
            update singleevent set
                userId = #{userid},
                eventName = #{eventname},
                startTime = #{starttime},
                endTime = #{endtime},
                address = #{address},
                level = #{level},
                flag = #{flag},
                person = #{person},
                remarks = #{remarks},
                repeatTime = #{repeaTtime},
                isOverdue = #{isOverdue},
                remindTime = #{remindTime},
                day = #{day},
                month = #{month},
                year = #{year},
                type = #{type}
            where eventId = #{eventid}
    </update>

    <select id="queryEvents" resultType="com.modcreater.tmbeans.pojo.SingleEvent">
        select
        <include refid="Base_Column_List"/>
        from singleevent
        <where>
            <if test="userid != null">
                userid = #{userid}
            </if>
            <if test="day != null">
                and day = #{day}
            </if>
            <if test="month != null">
                and month = #{month}
            </if>
            <if test="year != null">
                and year = #{year}
            </if>
            and isOverdue &lt;&gt; 2
        </where>
    </select>

    <select id="queryByDayOrderByLevel" resultType="com.modcreater.tmbeans.pojo.SingleEvent">
        select
        <include refid="Base_Column_List"/>
        from singleevent
        <where>
            <if test="userid != null">
                userid = #{userid}
            </if>
            <if test="day != null">
                and day = #{day}
            </if>
            <if test="month != null">
                and month = #{month}
            </if>
            <if test="year != null">
                and year = #{year}
            </if>
            and isOverdue &lt;&gt; 2
        </where>
        order by level asc
    </select>

    <select id="queryByDayOrderByLevelAndDate" resultType="com.modcreater.tmbeans.pojo.SingleEvent">
        select
        <include refid="Base_Column_List"/>
        from singleevent
        <where>
            <if test="userid != null">
                userid = #{userid}
            </if>
            <if test="day != null">
                and day = #{day}
            </if>
            <if test="month != null">
                and month = #{month}
            </if>
            <if test="year != null">
                and year = #{year}
            </if>
            and isOverdue &lt;&gt; 2
        </where>
        order by level asc , startTime asc
    </select>
    <select id="queryByMonthOrderByLevel" resultType="com.modcreater.tmbeans.pojo.SingleEvent">
        select
        <include refid="Base_Column_List"/>
        from singleevent
        <where>
            <if test="userid != null">
                userid = #{userid}
            </if>
            <if test="day != null">
                and day = #{day}
            </if>
            <if test="month != null">
                and month = #{month}
            </if>
            <if test="year != null">
                and year = #{year}
            </if>
            and isOverdue &lt;&gt; 2
        </where>
        order by level asc
    </select>
    <select id="queryByMonthOrderByLevelAndDate" resultType="com.modcreater.tmbeans.pojo.SingleEvent">
        select
        <include refid="Base_Column_List"/>
        from singleevent
        <where>
            <if test="userid != null">
                userid = #{userid}
            </if>
            <if test="month != null">
                and month = #{month}
            </if>
            <if test="year != null">
                and year = #{year}
            </if>
            and isOverdue &lt;&gt; 2
        </where>
        order by level asc , startTime asc
    </select>

    <update id="updOldEvent">
            update singleevent set
                isOverdue = 2
            where userId = #{userid} and year =#{year} and month=#{month} and day=#{day}
    </update>

    <select id="queryEventByUserId" resultType="int">
        select count(1) from singleevent where userId=#{userId}
    </select>

    <insert id="uplDraft" parameterType="com.modcreater.tmbeans.vo.DraftVo">
        insert into draft values
        (null ,
        #{phoneNum},
        #{data}
        )
    </insert>

    <select id="queryDraftByPhone" parameterType="String" resultType="String">
        select data from draft where phoneNum=#{phoneNum}
    </select>

    <update id="updateDraft" parameterType="com.modcreater.tmbeans.vo.DraftVo" >
        update draft set `data`=concat(`data`,#{data})
        where phoneNum=#{phoneNum}
    </update>

    <insert id="uplLoopEvent" parameterType="com.modcreater.tmbeans.pojo.LoopEvent">
        insert  into  loopevent values
        (#{eventId},
        #{userId},
        #{eventName},
        #{startTime},
        #{endTime},
        #{address},
        #{level},
        #{flag},
        #{person},
        #{remarks},
        #{isOverdue},
        #{remindTime},
        #{type},
        #{day},
        #{week})
    </insert>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.modcreater.tmdao.mapper.EventMapper">

    <sql id="Base_Column_List">
        eventId,userId,eventName,startTime,endTime,address,level,flag,
        remarks,person,repeatTime,isOverdue,remindTime,day,month,year,type
    </sql>

    <insert id="uploadingEvents" parameterType="com.modcreater.tmbeans.pojo.SingleEvent">
            insert into singleevent values
            (null ,
            #{eventid} ,
            #{userid},
            #{eventname},
            #{starttime},
            #{endtime},
            #{address},
            #{level},
            #{flag},
            #{person},
            #{remarks},
            #{repeaTtime},
            #{isOverdue},
            #{remindTime},
            #{day},
            #{month},
            #{year},
            #{type},
            #{isLoop})
    </insert>

    <select id="countIdByDate" resultType="java.lang.Integer">
        select count(id) from singleevent
        <where>
            <if test="userid != null">
                userId = #{userid}
            </if>
            <if test="month != null">
                and month = #{month}
            </if>
            <if test="day != null">
                and day = #{day}
            </if>
            <if test="year != null">
                and year = #{year}
            </if>
        </where>
        and ((startTime &gt; #{starttime} and endTime &lt; #{endtime})
        or
        (startTime &gt; #{starttime} and startTime &lt; #{endtime})
        or
        (endTime &gt; #{starttime} and endTime &lt; #{endtime})
        or
        (startTime &lt;= #{starttime} and endTime &gt;= #{endtime}))
    </select>

    <insert id="uploadingLoopEvents" parameterType="com.modcreater.tmbeans.pojo.SingleEvent">
            insert into loopevent values
            (null ,
            #{eventid} ,
            #{userid},
            #{eventname},
            #{starttime},
            #{endtime},
            #{address},
            #{level},
            #{flag},
            #{person},
            #{remarks},
            #{repeaTtime},
            #{isOverdue},
            #{remindTime},
            #{day},
            #{month},
            #{year},
            #{type})
    </insert>

    <update id="withdrawEventsByUserId">
        update singleevent set isOverdue = #{eventStatus} where eventId = #{eventId} and userId = #{userId}
    </update>

    <update id="alterEventsByUserId">
            update singleevent set
                eventName = #{eventname},
                startTime = #{starttime},
                endTime = #{endtime},
                address = #{address},
                level = #{level},
                flag = #{flag},
                person = #{person},
                remarks = #{remarks},
                repeatTime = #{repeaTtime},
                isOverdue = #{isOverdue},
                remindTime = #{remindTime},
                day = #{day},
                month = #{month},
                year = #{year},
                type = #{type},
                isLoop = #{isLoop}
            where eventId = #{eventid} and userId = #{userid}
    </update>

    <select id="queryEvents" resultType="com.modcreater.tmbeans.pojo.SingleEvent">
        select
        <include refid="Base_Column_List"/>
        from singleevent
        <where>
            <if test="userid != null">
                userid = #{userid}
            </if>
            <if test="day != null">
                and day = #{day}
            </if>
            <if test="month != null">
                and month = #{month}
            </if>
            <if test="year != null">
                and year = #{year}
            </if>
            and isOverdue in (1,0) and isLoop = 0
        </where>

        order by day asc ,startTime asc
    </select>

    <select id="queryByDayOrderByLevel" resultType="com.modcreater.tmbeans.pojo.SingleEvent">
        select
        <include refid="Base_Column_List"/>
        from singleevent
        <where>
            <if test="userid != null">
                userid = #{userid}
            </if>
            <if test="day != null">
                and day = #{day}
            </if>
            <if test="month != null">
                and month = #{month}
            </if>
            <if test="year != null">
                and year = #{year}
            </if>
            and isOverdue in (1,0)
        </where>
        order by level asc
    </select>

    <select id="queryByDayOrderByLevelAndDate" resultType="com.modcreater.tmbeans.pojo.SingleEvent">
        select
        <include refid="Base_Column_List"/>
        from singleevent
        <where>
            <if test="userid != null">
                userid = #{userid}
            </if>
            <if test="day != null">
                and day = #{day}
            </if>
            <if test="month != null">
                and month = #{month}
            </if>
            <if test="year != null">
                and year = #{year}
            </if>
            and isOverdue in (1,0)
        </where>
        order by level asc , startTime asc
    </select>

    <select id="queryEventByUserId" resultType="int">
        select count(1) from singleevent where userId=#{userId}
    </select>

    <insert id="uplDraft" parameterType="com.modcreater.tmbeans.vo.eventvo.DraftVo">
        insert into draft values
        (null ,
        #{userId},
        #{phoneNum},
        #{data}
        )
    </insert>

    <select id="queryDraftByPhone" parameterType="String" resultType="String">
        select data from draft where phoneNum=#{phoneNum}
    </select>

    <select id="queryLoopEvents" resultType="com.modcreater.tmbeans.pojo.SingleEvent">
        select
        <include refid="Base_Column_List"/>
        from singleevent
        where userid = #{userId} and isLoop = 1 and isOverdue in (1,0) order by startTime asc
    </select>
    <select id="queryDays" resultType="java.lang.Integer">
        select day from singleevent where
        userId = #{userid}
        and month = #{month}
        and year = #{year}
        group by day
    </select>
    <select id="querySingleEventTime" resultType="com.modcreater.tmbeans.pojo.SingleEvent">
        select startTime,endTime from singleevent
        <where>
            <if test="isLoop != null">
                isLoop = #{isLoop}
            </if>
        </where>
         and userid=#{userid} and eventid = #{eventid}
    </select>
    <select id="queryUserEventsByUserIdIsOverdue" resultType="com.modcreater.tmbeans.pojo.SingleEvent">
        select eventId,userId,eventName,day,month,year
        from singleevent
        where userId = #{userId}
        and isOverdue = #{isOverdue}
        order by year desc,month desc,day desc limit 0,7
    </select>

    <select id="queryEventsByConditions" resultType="com.modcreater.tmbeans.pojo.SingleEvent">
        select eventId,userId,eventName,day,month,year
        from singleevent
        <where>
            <if test="eventname != null and eventname != ''">
                eventName like "%"#{eventname}"%"
            </if>
            <if test="type != null and type != ''">
                and type = #{type}
            </if>
            <if test="level != null and level != ''">
                and level = #{level}
            </if>
            <if test="person != null and person != ''">
                and person = #{person}
            </if>
            <if test="year != null and year != ''">
                and year = #{year}
            </if>
            <if test="month != null and month != ''">
                and month = #{month}
            </if>
            <if test="day != null and day != ''">
                and day = #{day}
            </if>
            <if test="isOverdue != null">
                and isOverdue = #{isOverdue}
            </if>
            <if test="starttime != null and starttime != 0 and endtime != null and endtime != 0">
                and ((startTime &gt;= #{starttime} and startTime &lt;= #{endtime}) or
                (endTime &gt;= #{starttime} and endTime &lt;= #{endtime}) or
                (startTime &lt;= #{starttime} and endTime &gt;= #{endtime}) or
                (startTime &gt;= #{starttime} and endTime &lt;= #{endtime}))
            </if>
        </where>
        and isLoop = 0
        order by year desc,month desc,day desc
    </select>
    <select id="getUserEventsGroupByType" resultType="com.modcreater.tmbeans.databaseresult.GetUserEventsGroupByType">
        select type ,sum(endTime-startTime) totalMinutes ,count(type) num from singleevent
        where userId = #{userId} and isOverdue in (1,0) group by type
    </select>
    <select id="getMaxSingleEventType" resultType="java.lang.Long">
        select type from singleevent
        where userId = #{userId} and isOverdue in (1,0) and
        (select max(endTime-startTime) from singleevent
        where userId = #{userId} and isOverdue in (1,0))
    </select>
    <select id="getMinSingleEventType" resultType="java.lang.Long">
        select type from singleevent
        where userId = #{userId} and isOverdue in (1,0) and
        (select min(endTime-startTime) from singleevent
        where userId = #{userId} and isOverdue in (1,0))
    </select>
    <select id="countEvents" resultType="java.lang.Long">
        select count(id) from singleevent where userId = #{userId} and isOverdue in (1,0)
    </select>

    <update id="updateDraft" parameterType="com.modcreater.tmbeans.vo.eventvo.DraftVo" >
        update draft set `data`=concat(`data`,#{data})
        where phoneNum=#{phoneNum}
    </update>
    <select id="queryClashEventList " parameterType="com.modcreater.tmbeans.pojo.SingleEvent" resultType="com.modcreater.tmbeans.pojo.SingleEvent">
        select * from singleevent
        where
        userId = #{userid} and
        and month = #{month} and
        and day = #{day} and
        and year = #{year} and
        and ((startTime &gt; #{starttime} and endTime &lt; #{endtime})
        or
        (startTime &gt; #{starttime} and startTime &lt; #{endtime})
        or
        (endTime &gt; #{starttime} and endTime &lt; #{endtime})
        or
        (startTime &lt;= #{starttime} and endTime &gt;= #{endtime}))
    </select>

</mapper>
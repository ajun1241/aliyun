<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.modcreater.tmdao.mapper.GroupMapper">
    <insert id="createGroup" useGeneratedKeys="true" keyProperty="id">
        insert into groupinfo (groupName,groupPicture,groupUnit,groupScale,groupNature,groupPresentation,createBy) values
        (#{groupName},#{groupPicture},#{groupUnit},#{groupScale},#{groupNature},#{groupPresentation},#{userId})
    </insert>
    <insert id="addCreator">
        insert into grouprelation (groupId, memberId, memberLevel) values (#{groupId},#{userId},2)
    </insert>
    <insert id="addGroupPermission">
        insert into grouppermission (userid, groupupperlimit) VALUES (#{userId},#{groupUpperLimit})
    </insert>
    <insert id="createMember">
        insert into grouprelation (groupId, memberId, memberLevel) values (#{groupId},#{memberId},0)
    </insert>
    <insert id="saveGroupMsg" useGeneratedKeys="true" keyProperty="id">
        insert into groupsystemmsg (senderId, receiverId, msgContent, groupValidationId,msgType) values (#{senderId},#{receiverId},#{msgContent},#{groupValidationId},#{msgType})
    </insert>
    <insert id="saveValidationContent" useGeneratedKeys="true" keyProperty="id">
        insert into groupvalidation (userId, validationContent,groupId, validationSource) values (#{userId},#{validationContent},#{groupId},#{validationSource})
    </insert>
    <insert id="saveGroupFeedbackMsg">
        insert into groupfeedbackvalidation (processId, receiverId,groupId, msgContent,processState) values (#{processId},#{receiverId},#{groupId},#{msgContent},#{processState})
    </insert>
    <insert id="saveGroupEventMsg">
        insert into groupeventmsg (userId, groupId, msgBody, eventName, address, startTime, endTime, type, level, repeatTime, remindTime, person, remark, backLogList)
        values (#{userId},#{groupId},#{msgBody},#{eventName},#{address},
        #{startTime},#{endTime},#{type},#{level},#{repeatTime},
        #{remindTime},#{person},#{remark},#{backlogList})
    </insert>
    <insert id="saveSendEventMsg">
        insert into groupsendeventmsg (groupId, eventId, senderId) values (#{groupId},#{eventId},#{senderId})
    </insert>
    <insert id="saveGroupInviteMsg">
        insert into groupinvitemsgstatus (msgStatusId, userId,status) values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.msgStatusId},#{item.userId},#{item.status})
        </foreach>
    </insert>
    <update id="addCreateLimit">
        update grouppermission set groupUpperLimit = groupUpperLimit + #{num} where userId = #{userId}
    </update>
    <update id="updateGroupInfo" statementType="STATEMENT">
        update groupinfo set ${updateType} = '${value}' where id = ${groupId}
    </update>
    <update id="updateMemberLevel">
        update grouprelation set memberLevel = #{memberLevel} where groupId = #{groupId} and memberId = #{memberId}
    </update>
    <update id="changeCreator">
        update groupinfo set createBy = #{memberId} where id = #{groupId}
    </update>
    <update id="updGroupValidation">
        update groupvalidation set processState=#{processState},processDate=#{processDate},processBy=#{processBy} where id=#{groupValidationId}
    </update>
    <update id="updGroupMsgById">
        update groupsystemmsg set readStatus=1 where id=#{groupMsgId}
    </update>
    <update id="updGroupSendEventMsg">
        update groupsendeventmsg set processState=#{processState},processDate=#{processDate},processBy=#{processBy} where id=#{groupValidationId}
    </update>
    <update id="updGroupInviteMsg">
        update groupinvitemsgstatus set status=#{status},userId=#{userId} where id=#{msgId}
    </update>
    <update id="updGroupFeedback">
        update groupfeedbackvalidation set readStatus=1 where id=#{groupMsgId}
    </update>
    <delete id="removeMember">
        delete from grouprelation where groupId = #{groupId} and memberId = #{memberId} and memberLevel != 2
    </delete>
    <delete id="deleteGroup">
        delete from groupinfo where id = #{groupId}
    </delete>
    <delete id="deleteAllMembers">
        delete from grouprelation where groupId = #{groupId}
    </delete>

    <select id="getMyGroup" resultType="com.modcreater.tmbeans.show.group.ShowMyGroup">
        select gi.id groupId,gi.groupName groupName,gi.groupPicture groupPicture from grouprelation gl,groupinfo gi
        where gi.id = gl.groupId and gl.memberId = #{userId} and gl.memberLevel = #{role}
    </select>
    <select id="getMyCreatedGroupNum" resultType="java.lang.Integer">
        select count(id) from grouprelation where memberId = #{userId} and memberLevel = 2
    </select>
    <select id="getGroupUpperLimit" resultType="com.modcreater.tmbeans.pojo.GroupPermission">
        select * from grouppermission where userId = #{userId}
    </select>
    <select id="queryGroupInfo" resultType="com.modcreater.tmbeans.pojo.GroupInfo">
        select * from groupinfo where id=#{groupId}
    </select>
    <select id="getMyGroupInfo" resultType="com.modcreater.tmbeans.show.group.ShowGroupInfo">
        select id groupId,
        groupPicture,
        groupName,
        groupUnit,
        groupScale,
        groupNature,
        groupPresentation,
        crateDate from groupinfo where id=#{groupId}
    </select>
    <select id="getMembersId" resultType="java.lang.String">
        select memberId from grouprelation where groupId = #{groupId} and memberLevel in (0,1) order by memberLevel desc
    </select>
    <select id="getGroupDefaultHeadImgUrl" resultType="java.lang.String">
        select defaultHeadImgUrl from groupheadimgurl where groupNature = #{groupNature}
    </select>
    <select id="getAllGroupDefultHeadImgUrls" resultType="java.lang.String">
        select defaultHeadImgUrl from groupheadimgurl
    </select>
    <select id="queryGroupRelation" resultType="com.modcreater.tmbeans.pojo.GroupRelation">
        select * from grouprelation where groupId=#{groupId}
    </select>
    <select id="getManagerNum" resultType="java.lang.Long">
        select count(id) from grouprelation where groupId = #{groupId} and memberLevel = 1
    </select>
    <select id="getManagerInfo" resultType="java.util.Map">
        select a.id friendId,a.userName,a.headImgUrl,a.userCode,a.gender,a.userSign
        from account a,grouprelation g
        where a.id = g.memberId and g.memberLevel = 1 and g.groupId = #{groupId}
    </select>
    <select id="getCreatorInfo" resultType="java.util.Map">
        select a.id userId,a.userName,a.headImgUrl
        from account a,grouprelation g
        where a.id = g.memberId and g.memberLevel = 2 and g.groupId = #{groupId}
    </select>
    <select id="getMemberLevel" resultType="java.lang.Integer">
        select memberLevel from grouprelation where groupId = #{groupId} and memberId = #{memberId}
    </select>
    <select id="queryGroupMember" resultType="com.modcreater.tmbeans.pojo.GroupRelation">
        select * from grouprelation where groupId=#{groupId} and memberId=#{memberId}
    </select>
    <select id="getGroupMsgById" resultType="com.modcreater.tmbeans.pojo.GroupSystemMsg">
        select * from groupsystemmsg where id=#{groupMsgId}
    </select>
    <select id="queryGroupMemberInfoByLevel" resultType="java.util.Map">
        select a.id userId,a.userName,a.headImgUrl
        from account a,grouprelation g
        where a.id = g.memberId and g.memberLevel = #{memberLevel} and g.groupId = #{groupId}
    </select>
    <select id="getGroupValidation" resultType="com.modcreater.tmbeans.pojo.GroupValidation">
        select * from groupvalidation where id=#{groupValidationId}
    </select>
    <select id="queryApplyUnreadMsgList" resultType="com.modcreater.tmbeans.pojo.GroupSystemMsg">
        select * from groupsystemmsg where receiverId=#{userId}
        and groupvalidationId IN (SELECT id FROM groupvalidation WHERE processState = 0)
        OR groupvalidationId IN (SELECT id FROM groupsendeventmsg WHERE processState = 0)
        limit #{pageIndex},#{pageSize}
    </select>
    <select id="queryApplyReadMsgList" resultType="com.modcreater.tmbeans.pojo.GroupSystemMsg">
        select * from groupsystemmsg where receiverId=#{userId}
        and groupvalidationId IN (SELECT id FROM groupvalidation WHERE processState &lt;&gt; 0)
        OR groupvalidationId IN (SELECT id FROM groupsendeventmsg WHERE processState &lt;&gt; 0)
        limit #{pageIndex},#{pageSize}
    </select>
    <select id="queryApplyUnreadFMsgList" resultType="com.modcreater.tmbeans.pojo.GroupFeedbackValidation">
        select * from groupfeedbackvalidation where receiverId=#{userId} and readStatus=0
        limit #{pageIndex},#{pageSize}
    </select>
    <select id="queryApplyReadFMsgList" resultType="com.modcreater.tmbeans.pojo.GroupFeedbackValidation">
        select * from groupfeedbackvalidation where receiverId=#{userId} and readStatus=1
        limit #{pageIndex},#{pageSize}
    </select>
    <select id="getGroupEventMsg" resultType="com.modcreater.tmbeans.show.group.ShowGroupEventMsg">
        select id groupEventMsgId,userId,msgBody,createTime,eventName from groupeventmsg where groupId = #{groupId}
    </select>
    <select id="getGroupEventMsgInfo" resultType="com.modcreater.tmbeans.pojo.GroupEventMsg">
        select * from groupeventmsg where id = #{groupEventMsgId}
    </select>
    <select id="searchMembersByCondition" resultType="java.lang.String">
        select memberId from grouprelation g ,account a where a.id = g.memberId and g.groupId = #{groupId} and (a.userName like "%"#{condition}"%" or a.userCode like "%"#{condition}"%")
    </select>
    <select id="getGroupRelation" resultType="com.modcreater.tmbeans.pojo.GroupRelation">
        select * from grouprelation where groupId = #{groupId} and memberId = #{memberId}
    </select>
    <select id="getGroupSendEventMsg" resultType="com.modcreater.tmbeans.pojo.GroupSendEventMsg">
        select * from groupsendeventmsg where id=#{groupValidationId}
    </select>
    <select id="queryGroupInviteMsgStatus" resultType="com.modcreater.tmbeans.pojo.GroupInviteMsgStatus">
        select * from groupinvitemsgstatus where msgStatusId=#{msgStatusId} and userId=#{userId}
    </select>
    <select id="isMemberInGroup" resultType="java.lang.Integer">
        select count(id) from grouprelation where groupId = #{groupId} and memberId = #{memberId}
    </select>
    <select id="queryGroupFeedback" resultType="com.modcreater.tmbeans.pojo.GroupFeedbackValidation">
        select * from groupfeedbackvalidation where id=#{groupMsgId}
    </select>
    <select id="groupingMembers" resultType="java.lang.String">
        select memberId from grouprelation where groupId = #{groupId} and memberLevel = #{memberLevel} and memberId != #{memberId} order by memberLevel desc
    </select>
    <select id="groupingMembersByCondition" resultType="java.lang.String">
        select memberId from grouprelation g ,account a where a.id = g.memberId and g.memberLevel = #{memberLevel} and g.groupId = #{groupId} and g.memberId != #{memberId} and (a.userName like "%"#{condition}"%" or a.userCode like "%"#{condition}"%")
    </select>
    <select id="getMembersIdExceptSelf" resultType="java.lang.String">
        select memberId from grouprelation where groupId = #{groupId} and memberId != #{memberId} order by memberLevel desc
    </select>
</mapper>
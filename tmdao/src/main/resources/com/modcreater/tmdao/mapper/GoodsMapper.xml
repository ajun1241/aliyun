<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.modcreater.tmdao.mapper.GoodsMapper">

    <insert id="addNewGoods" useGeneratedKeys="true" keyProperty="id">
        insert into store_goods (storeId, goodsName, goodsBrand, goodsPicture, goodsBarCode,
        goodsSpecifications, goodsAllergen, goodsUnit, goodsTypeId, goodsFUnit, faUnitNum)
         values (#{storeId},#{goodsName},#{goodsBrand},#{goodsPicture},#{goodsBarCode},
         #{goodsSpecifications},#{goodsAllergen},#{goodsUnit},#{goodsTypeId},#{goodsFUnit},#{faUnitNum})
    </insert>
    <insert id="addNewGoodsStock">
        insert into store_goods_stock (goodsId, stockNum, goodsStatus)
        values (#{goodsId},#{stockNum},#{goodsStatus})
    </insert>
    <update id="updateGoods">
        update store_goods set
        goodsName = #{goodsName},
        goodsBrand = #{goodsBrand},
        goodsPicture = #{goodsPicture},
        goodsBarCode = #{goodsBarCode},
        goodsSpecifications = #{goodsSpecifications},
        goodsAllergen = #{goodsAllergen},
        goodsPrice = #{goodsPrice},
        goodsUnit = #{goodsUnit},
        goodsTypeId = #{goodsTypeId},
        goodsFUnit = #{goodsFUnit},
        faUnitNum = #{faUnitNum}
        where id = #{storeId}
    </update>
    <update id="updateGoodsStock">
        update store_goods_stock set stockNum = #{goodsStock} where goodsId = #{goodsId}
    </update>
    <update id="updateGoodsUnitPrice">
        update store_goods set goodsPrice = #{goodsPrice} where id = #{goodsId}
    </update>
    <update id="updateGoodsStatus">
        update store_goods set goodsStatus = #{status} where id = #{goodsId}
    </update>
    <delete id="cleanConsumablesList">
        delete from store_goodsconsumable where goodsId = #{goodsId}
    </delete>
    <select id="getGoodsList" resultType="java.util.Map">
        SELECT sg.*,sgs.`goodsPrice`,sgs.`stockNum` FROM store_goods sg
        INNER JOIN store_goods_stock sgs
        ON sg.id=sgs.`goodsId` WHERE sgs.storeId=#{storeId} AND sg.`goodsTypeId`=#{goodsTypeId}
        <if test=" goodsName != null and goodsName != ''" >
            and sg.goodsName like concat('%',#{goodsName},'%')
        </if>
        <if test=" pageIndex >= 0 and pageSize >= 0 " >
            limit #{pageIndex},#{pageSize}
        </if>
    </select>
    <insert id="addNewGoodsConsumable">
        insert into store_goodsconsumable (goodsId, consumableGoodsId,  registeredRatioIn,
        registeredRationInUnit, registeredRatioOut, registeredRationOutUnit, registeredTime)
        values (#{goodsId},#{consumableGoodsId},#{registeredRatioIn},
        #{registeredRationInUnit},#{registeredRatioOut},#{registeredRationOutUnit},#{registeredTime});
    </insert>
    <select id="getGoodsInfo" resultType="com.modcreater.tmbeans.pojo.StoreGoods">
        select * from store_goods where id = #{goodsId}
    </select>
    <select id="getGoodsTypeList" resultType="com.modcreater.tmbeans.pojo.StoreGoodsType">
        select * from store_goods_type where id IN
        (SELECT sg.goodsTypeId FROM store_goods sg
        INNER JOIN store_goods_stock sgs
        ON sg.id=sgs.`goodsId` WHERE sgs.storeId=10 )
    </select>
    <select id="getGoodsStockList" resultType="com.modcreater.tmbeans.show.goods.ShowGoodsStockInfo">
        select sg.id goodsId,sg.goodsPicture goodsPicture,sg.goodsName goodsName,
        sgt.type goodsType,sg.goodsUnit goodsUnit,sum(sgk.stockNum) goodsStock
        from store_goods sg,store_goods_stock sgk,store_goods_type sgt
        where sg.id = sgk.goodsId and sgt.id = sg.goodsTypeId and sg.storeId = #{storeId}
        <if test="goodsName != '' and goodsName != null">
            and
            (sg.goodsName like "%"#{goodsName}"%"
            or sg.goodsBrand like "%"#{goodsName}"%"
            or sg.goodsSpecifications like "%"#{goodsName}"%")
        </if>
        group by sg,id
        limit #{pageNum},#{pageSize}
    </select>
    <select id="getGoodsPriceList" resultType="com.modcreater.tmbeans.show.goods.ShowGoodsPriceInfo">
        select sg.id goodsId,sg.goodsPicture goodsPicture,sg.goodsName goodsName,
        sgt.type goodsType,sg.goodsUnit goodsUnit,sg.goodsPrice goodsPrice
        from store_goods sg,store_goods_type sgt
        where sgt.id = sg.goodsTypeId and sg.storeId = #{storeId}
        <if test="goodsName != '' and goodsName != null">
            and
            (sg.goodsName like "%"#{goodsName}"%"
            or sg.goodsBrand like "%"#{goodsName}"%"
            or sg.goodsSpecifications like "%"#{goodsName}"%")
        </if>
        group by sg.id
        limit #{pageNum},#{pageSize}
    </select>
    <select id="getStoreMaster" resultType="java.lang.Long">
        select count(id) from store_info where id = #{storeId} and userId = #{userId}
    </select>
    <select id="getGoodsAllTypeList" resultType="java.util.Map">
        select * from store_goods_type where id != 2
    </select>
    <select id="getConsumableGoods" resultType="com.modcreater.tmbeans.show.goods.ShowConsumableGoods">
        select id goodsId,goodsPicture,goodsName,
        goodsUnit,goodsFUnit,faUnitNum
        from store_goods
        where storeId = #{storeId}
        <if test="goodsName != '' and goodsName != null">
            and
            (goodsName like "%"#{goodsName}"%"
            or goodsBrand like "%"#{goodsName}"%"
            or goodsSpecifications like "%"#{goodsName}"%")
        </if>
        group by id
        limit #{pageNum},#{pageSize}
    </select>
    <select id="getGoodsUnit" resultType="java.util.Map">
        select id unitId,name unitName from store_goods_unit where type = 1 and (createBy = 100000 or createBy = #{userId}) order by createTime desc
    </select>
</mapper>
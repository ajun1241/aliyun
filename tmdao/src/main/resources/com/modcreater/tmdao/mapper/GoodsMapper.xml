<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.modcreater.tmdao.mapper.GoodsMapper">

    <insert id="addNewGoods" useGeneratedKeys="true" keyProperty="id">
        insert into store_goods (storeId, goodsName, goodsBrand, goodsPicture, goodsBarCode,
        goodsSpecifications, goodsAllergen, goodsUnit, goodsTypeId, goodsFUnit, faUnitNum)
         values (#{storeId},#{goodsName},#{goodsBrand},#{goodsPicture},#{goodsBarCode},
         #{goodsSpecifications},#{goodsAllergen},#{goodsUnit},#{goodsTypeId},#{goodsFUnit},#{faUnitNum})
    </insert>
    <insert id="addNewGoodsStock">
        insert into store_goods_stock (goodsId,storeId, stockNum,goodsBarCode, goodsStatus)
        values (#{goodsId},#{storeId},#{stockNum},#{goodsBarCode},#{goodsStatus})
    </insert>
    <update id="updateGoods">
        update store_goods set
        goodsName = #{goodsName},
        goodsBrand = #{goodsBrand},
        goodsPicture = #{goodsPicture},
        goodsBarCode = #{goodsBarCode},
        goodsSpecifications = #{goodsSpecifications},
        goodsAllergen = #{goodsAllergen},
        goodsUnit = #{goodsUnit},
        goodsTypeId = #{goodsTypeId},
        goodsFUnit = #{goodsFUnit},
        faUnitNum = #{faUnitNum}
        where id = #{goodsId}
    </update>
    <update id="updateGoodsStock">
        update store_goods_stock set stockNum = #{goodsStock},goodsBarCode = #{goodsBarCode} where goodsId = #{goodsId}
    </update>
    <update id="updateGoodsUnitPrice">
        update store_goods_stock set goodsPrice = #{goodsPrice} where goodsId = #{goodsId}
    </update>
    <update id="updateGoodsStatus">
        update store_goods_stock set goodsStatus = #{status} where id = #{goodsId}
    </update>
    <update id="deductionStock">
        <foreach collection="sourceGoods" item="sourceGoods" index="index" separator=";">
            update store_goods_stock set stockNum = stockNum - #{sourceGoods.goodsNum} where storeId=#{sourceStoreId} and goodsId=#{sourceGoods.goodsId}
        </foreach>
    </update>
    <update id="updateConsumable">
        update store_goodsconsumable
        set registeredRatioIn = #{registeredRatioIn},
        registeredRatioOut = #{registeredRatioOut},
        consumptionRate = #{consumptionRate}
        where id = #{consumableId}
    </update>
    <update id="updateCorRelation">
        update store_goods_correlation set goodsSonId = #{goodsSonId} where goodsParentId = #{goodsParentId}
    </update>
    <delete id="cleanConsumablesList">
        delete from store_goodsconsumable where goodsId = #{goodsId}
    </delete>
    <delete id="deleteGoodsConsumable">
        delete from store_goodsconsumable where id = #{consumableId}
    </delete>
    <delete id="deleteCorRelation">
        delete from store_goods_correlation where goodsParentId = #{goodsParentId}
    </delete>
    <select id="getGoodsList" resultType="java.util.Map">
        SELECT sg.*,sgs.`goodsPrice`,sgs.`stockNum` FROM store_goods sg
        INNER JOIN store_goods_stock sgs
        ON sg.id=sgs.`goodsId` WHERE sgs.storeId=#{storeId} AND sg.`goodsTypeId`=#{goodsTypeId}
        <if test=" goodsName != null and goodsName != ''" >
            and sg.goodsName like concat('%',#{goodsName},'%')
        </if>
        and sgs.goodsStatus = 1
        <if test=" pageIndex >= 0 and pageSize >= 0 " >
            limit #{pageIndex},#{pageSize}
        </if>
    </select>
    <insert id="addNewGoodsConsumable">
        insert into store_goodsconsumable (goodsId, consumableGoodsId,  registeredRatioIn,
        registeredRationInUnit, registeredRatioOut, registeredRationOutUnit, registeredTime, consumptionRate)
        values (#{goodsId},#{consumableGoodsId},#{registeredRatioIn},
        #{registeredRationInUnit},#{registeredRatioOut},#{registeredRationOutUnit},#{registeredTime},#{consumptionRate});
    </insert>
    <insert id="bindingGoods">
        insert into store_goods_correlation (goodsParentId, goodsSonId) values (#{id},#{corId})
    </insert>
    <select id="getGoodsInfo" resultType="com.modcreater.tmbeans.pojo.StoreGoods">
        select * from store_goods where id = #{goodsId}
    </select>
    <select id="getGoodsTypeList" resultType="java.util.Map">
        select * from store_goods_type where id IN
        (SELECT sg.goodsTypeId FROM store_goods sg
        INNER JOIN store_goods_stock sgs
        ON sg.id=sgs.`goodsId` WHERE sgs.storeId=#{storeId} and sgs.goodsStatus = 1)
    </select>
    <select id="getGoodsStockList" resultType="com.modcreater.tmbeans.show.goods.ShowGoodsStockInfo">
        select sg.id goodsId,sg.goodsPicture goodsPicture,sg.goodsName goodsName,
        sgt.type goodsType,sg.goodsUnit goodsUnit,sum(sgk.stockNum) goodsStock
        from store_goods sg,store_goods_stock sgk,store_goods_type sgt
        where sg.id = sgk.goodsId and sgt.id = sg.goodsTypeId and sg.storeId = #{storeId} and sgk.goodsStatus = 1
        <if test="goodsName != '' and goodsName != null">
            and
            (sg.goodsName like "%"#{goodsName}"%"
            or sg.goodsBrand like "%"#{goodsName}"%"
            or sg.goodsSpecifications like "%"#{goodsName}"%")
        </if>
        group by sg.id
        limit #{pageNum},#{pageSize}
    </select>
    <select id="getGoodsPriceList" resultType="com.modcreater.tmbeans.show.goods.ShowGoodsPriceInfo">
        select sg.id goodsId,sg.goodsPicture goodsPicture,sg.goodsName goodsName,
        sgt.type goodsType,sg.goodsUnit goodsUnit,sgk.goodsPrice goodsPrice
        from store_goods sg,store_goods_type sgt,store_goods_stock sgk
        where sgt.id = sg.goodsTypeId and sg.id = sgk.goodsId and sg.storeId = #{storeId} and sgk.goodsStatus = 1
        <if test="goodsName != '' and goodsName != null">
            and
            (sg.goodsName like "%"#{goodsName}"%"
            or sg.goodsBrand like "%"#{goodsName}"%"
            or sg.goodsSpecifications like "%"#{goodsName}"%")
        </if>
        group by sg.id
        limit #{pageNum},#{pageSize}
    </select>
    <select id="getStoreMaster" resultType="java.lang.Long">
        select count(id) from store_info where id = #{storeId} and userId = #{userId}
    </select>
    <select id="getGoodsAllTypeList" resultType="java.util.Map">
        select * from store_goods_type where id != 2
    </select>
    <select id="getConsumableGoods" resultType="com.modcreater.tmbeans.show.goods.ShowConsumableGoods">
        select sg.id goodsId,sg.goodsPicture,sg.goodsName,
        sg.goodsUnit,sgs.stockNum goodsStock,(select type from store_goods_type sgt where sgt.id = sg.goodsTypeId) goodsType
        from store_goods sg,store_goods_stock sgs
        where sg.id = sgs.goodsId and sg.storeId = #{storeId} and sgs.goodsStatus = 1
        <if test="goodsName != '' and goodsName != null">
            and
            (sg.goodsName like "%"#{goodsName}"%"
            or sg.goodsBrand like "%"#{goodsName}"%"
            or sg.goodsSpecifications like "%"#{goodsName}"%")
        </if>
        group by sg.id
        limit #{pageNum},#{pageSize}
    </select>
    <select id="getGoodsUnit" resultType="java.util.Map">
        select id unitId,name unitName from store_goods_unit where type = 1 and (createBy = 100000 or createBy = #{userId}) order by createTime desc
    </select>
    <select id="getCorRelation" resultType="java.lang.Integer">
        select count(id) from store_goods_correlation where (goodsParentId = #{corGoodsId} or goodsSonId =#{corGoodsId})
    </select>
    <select id="getCorGoods" resultType="com.modcreater.tmbeans.show.goods.ShowConsumableGoods">
        select sg.id goodsId,sg.goodsPicture,sg.goodsName,
        sg.goodsUnit,sgs.stockNum goodsStock,(select type from store_goods_type sgt where sgt.id = sg.goodsTypeId) goodsType
        from store_goods sg,store_goods_stock sgs
        where sg.id = sgs.goodsId and sg.storeId = #{getGoodsStockList.storeId} and sg.id not in (${corIds}) and sgs.goodsStatus = 1
        <if test="getGoodsStockList.goodsName != '' and getGoodsStockList.goodsName != null">
            and
            (sg.goodsName like "%"#{getGoodsStockList.goodsName}"%"
            or sg.goodsBrand like "%"#{getGoodsStockList.goodsName}"%"
            or sg.goodsSpecifications like "%"#{getGoodsStockList.goodsName}"%")
        </if>
        limit #{getGoodsStockList.pageNum},#{getGoodsStockList.pageSize}
    </select>
    <select id="getCorGoodsId" resultType="java.lang.String">
        select goodsParentId goodsId from store_goods_correlation union select goodsSonId goodsId from store_goods_correlation
    </select>
    <select id="isBarCodeExists" resultType="java.lang.Integer">
        select count(id) from store_goods where storeId = #{storeId} and goodsBarCode = #{goodsBarCode}
    </select>
    <select id="getGoodsStock" resultType="com.modcreater.tmbeans.pojo.StoreGoodsStock">
        select * from store_goods_stock where goodsId = #{goodsId}
    </select>
    <select id="queryGoodsStock" resultType="java.lang.Long">
        select stockNum from store_goods_stock where goodsId=#{goodsId} and storeId=#{storeId}
    </select>
    <select id="getSonGoodsInfo" resultType="com.modcreater.tmbeans.pojo.StoreGoodsCorrelation">
        select * from store_goods_correlation where goodsParentId = #{goodsId}
    </select>
    <select id="getParentGoodsInfo" resultType="com.modcreater.tmbeans.pojo.StoreGoodsCorrelation">
        select * from store_goods_correlation where goodsSonId = #{goodsId}
    </select>
    <select id="getGoodsInfoToUpdate" resultType="com.modcreater.tmbeans.show.goods.GoodsInfoToUpdate">
        select sg.id goodsId,sg.goodsName,sg.goodsBrand,sg.goodsPicture,(select type from store_goods_type sgt where sgt.id = sg.goodsTypeId) goodsType,
        sgs.stockNum goodsStock,sg.goodsUnit,sg.goodsFUnit,sg.faUnitNum,sg.goodsBarCode
        from store_goods sg,store_goodsconsumable sgc,store_goods_stock sgs
        where sg.id = sgc.goodsId and sg.id = sgs.goodsId and sg.id = #{goodsId}
    </select>
    <select id="getGoodsConsumablesList" resultType="com.modcreater.tmbeans.show.goods.ShowConsumable">
        select sgc.id consumableId ,sgc.consumableGoodsId goodsId,sg.goodsName,sg.goodsPicture,sgc.registeredRatioIn,
        sgc.registeredRationInUnit,sgc.registeredRatioOut,sgc.registeredRationOutUnit
        from store_goodsconsumable sgc,store_goods sg
        where sgc.consumableGoodsId = sg.id and sgc.goodsId = #{goodsId}
    </select>
    <select id="getUpdateConsumableInfo" resultType="com.modcreater.tmbeans.show.goods.ShowUpdateConsumableInfo">
        select sgc.id consumableId, sg.goodsName, sgc.registeredRatioIn, sgc.registeredRationInUnit, sgc.registeredRatioOut, sgc.registeredRationOutUnit
        from store_goodsconsumable sgc,store_goods sg
        where sgc.id = #{consumableId} and sgc.goodsId = sg.id
    </select>
</mapper>
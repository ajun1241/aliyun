<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.modcreater.tmdao.mapper.StoreMapper">
    <insert id="insertStoreAttestation">
        insert into store_attestation (userId, businessLicense, exequatur, storeLogo,address,longitude,latitude,
                storefrontPicture,businessScope,detailAddress,openStoreHours,closeStoreHours,phoneNumber,storeName)
        values (#{userId},#{businessLicense},#{exequatur},#{storeLogo},#{address},#{longitude},#{latitude},
        #{storefrontPicture},#{businessScope},#{detailAddress},#{openStoreHours},#{closeStoreHours},#{phoneNumber},#{storeName})
    </insert>
    <insert id="saveTradingRecord">
        insert into store_purchase_records (orderNumber, goodsId, targetStoreId, sourceStoreId, transactionPrice, goodsCount, status,changeGoodsId) values
        <foreach collection="sourceGoods" item="sourceGoods" index="index" separator=",">
            (#{orderNumber},#{sourceGoods.goodsId},#{targetStoreId},#{sourceStoreId},#{transactionPrice},#{sourceGoods.num},#{status}
                <if test="sourceGoods.changeGoodsNum != null and sourceGoods.changeGoodsNum != 0 and sourceGoods.changeGoodsNum != '' ">
                    ,#{sourceGoods.changeGoodsId}
                </if>
                <if test="sourceGoods.changeGoodsNum == null or sourceGoods.changeGoodsNum == 0 or sourceGoods.changeGoodsNum == '' ">
                    ,null
                </if>
            )
        </foreach>
    </insert>
    <insert id="collectStore">
        insert into  store_my_favorite(userId, storeId) values (#{userId},#{storeId})
    </insert>
    <insert id="addNewStoreFullReduction">
        insert into store_full_reduction (storeId, fullValue, disValue, startTime, endTime, share, discountedType)
        values (#{storeId},#{fullValue},#{disValue},#{startTime},#{endTime},#{share},2)
    </insert>
    <insert id="addNewStoreDiscountPromoteSales">
        insert into store_full_reduction (storeId, fullValue, disValue, startTime, endTime, share, discountedType)
        values (#{storeId},#{value},0,#{startTime},#{endTime},1,1)
    </insert>
    <update id="updWallet">
        update store_info set wallet=wallet+#{paymentAmount} where id=#{storeId}
    </update>
    <update id="updateStoreDiscountPromoteSales">
        update store_full_reduction set
        fullValue = #{value},
        startTime = #{startTime},
        endTime = #{endTime},
        share = #{share},
        discountedType = 1
        where id = #{promoteSalesId}
    </update>
    <delete id="deleteCollectStore">
        delete from store_my_favorite where userId=#{userId} and storeId=#{storeId}
    </delete>
    <delete id="deletePromoteSales">
        delete from store_full_reduction where storeId = #{storeId} and startTime = #{startTime}
    </delete>
    <select id="getStoreInfo" resultType="com.modcreater.tmbeans.pojo.StoreInfo">
        select * from store_info where id = #{storeId}
    </select>
    <select id="getDisposeStatus" resultType="com.modcreater.tmbeans.pojo.StoreAttestation">
        select * from store_attestation where userId=#{userId}
    </select>
    <select id="getStoreInfoByAttestationId" resultType="com.modcreater.tmbeans.pojo.StoreInfo">
        select * from store_info where attestationId=#{attestationId}
    </select>
    <select id="getStoreInfoByBarCode" resultType="java.util.Map">
        SELECT g.id,g.goodsName,g.goodsPicture,s.* FROM  store_goods g INNER JOIN  store_goods_stock s ON g.id=s.goodsId WHERE s.goodsBarCode=#{goodsBarCode} AND s.storeId=#{storeId} and s.goodsStatus=1
    </select>
    <select id="getStoreList" resultType="com.modcreater.tmbeans.pojo.StoreInfo">
        select * from store_info where status &lt;&gt; 0
    </select>
    <select id="getStoreIdByUserId" resultType="java.lang.Long">
        select id from store_info where userId = #{userId}
    </select>
    <select id="getGoodsAllType" resultType="com.modcreater.tmbeans.pojo.StoreGoods">
        select * from store_goods where  id in (select goodsId from store_goods_stock)
        <if test="goodsKeyWords != null and goodsKeyWords != '' ">
            and goodsName like concat('%',#{goodsKeyWords},'%')
        </if>
        <if test="screenType != null and screenType != '' and screenType >= 0 ">
            and goodsTypeId = #{screenType}
        </if>
    </select>
    <select id="getStoreListByGoods" resultType="java.util.Map">
        select si.*,sgs.goodsId,sgs.goodsPrice,sgs.storeId,sgs.stockNum,sgs.goodsStatus,sgs.goodsBarCode
        from store_info si inner join store_goods_stock sgs on si.id=sgs.storeId
        where sgs.goodsId=#{goodsId} and si.status &lt;&gt; 0
    </select>
    <select id="getCollectStoreList" resultType="com.modcreater.tmbeans.pojo.StoreInfo">
        select * from store_info where id in (select storeId from store_my_favorite where userId=#{userId})
    </select>
    <select id="getStoreCollectStatus" resultType="java.lang.Integer">
        select count(id) from store_my_favorite where userId=#{userId} and storeId=#{storeId}
    </select>
    <select id="getStoreCollectNum" resultType="java.lang.Integer">
        select count(id) from store_my_favorite where storeId=#{storeId}
    </select>
    <select id="getStoreListByCondition" resultType="com.modcreater.tmbeans.pojo.StoreInfo">
        select * from store_info
        <where>
            <if test="storeTypeId != null and storeTypeId != '' and storeTypeId >= 0">
                and businessScope=#{storeTypeId}
            </if>
            <if test="storeStatusId != null and storeStatusId != '' and storeStatusId >= 0">
                and status=#{storeStatusId}
            </if>
            <if test="city != null and city != ''">
                and locationAddress like concat('%',#{city},'%')
            </if>
        </where>
    </select>
    <select id="getStoreListBySearch" resultType="java.util.Map">
        select si.*,sgs.goodsId,sgs.goodsPrice,sgs.storeId,sgs.stockNum,sgs.goodsStatus,sgs.goodsBarCode
        from store_info si inner join store_goods_stock sgs on si.id=sgs.storeId
        where sgs.goodsId in (select id from store_goods
                              <where>
                                <if test="goodsKeyWords != null and goodsKeyWords != '' ">
                                    and goodsName like concat('%',#{goodsKeyWords},'%')
                                </if>
                                <if test="screenType != null and screenType != '' and screenType >= 0 ">
                                    and goodsTypeId = #{screenType}
                                </if>
                             </where>)
        and si.status &lt;&gt; 0 group by si.id
    </select>
    <select id="getGoodsListBySearch" resultType="com.modcreater.tmbeans.pojo.StoreGoods">
        SELECT * FROM store_goods  WHERE id IN (SELECT goodsId FROM store_goods_stock WHERE storeId=#{storeId} and goodsStatus=1)
        <if test="goodsKeyWords != null and goodsKeyWords != '' ">
            and goodsName like concat('%',#{goodsKeyWords},'%')
        </if>
        <if test="screenType != null and screenType != '' and screenType >= 0 ">
            and goodsTypeId = #{screenType}
        </if>
    </select>
    <select id="getStoreWeekSalesVolume" resultType="java.lang.Long">
        select IFNULL(sum(num), 0) from store_sales_volume where storeId=#{storeId} and createTime between #{toDay} and #{targetDay}
    </select>
    <select id="verifyStoreExistInSFR" resultType="java.lang.Integer">
        select count(1) from store_full_reduction where storeId = #{storeId} and endTime > #{curTime}
    </select>
    <select id="verStorePromoteSales" resultType="java.lang.Integer">
        select count(1) from store_full_reduction where storeId = #{storeId} and endTime >= #{curTime}
        and (
        (endTime &gt; #{startTime} and startTime &lt; #{endTime})
        or (startTime &lt; #{endTime} and endTime &gt; #{startTime})
        or ((startTime &gt;= #{startTime}) and (endTime &lt;= #{endTime})))
    </select>
    <select id="verUpdateStorePromoteSales" resultType="java.lang.Integer">
        select count(1) from store_full_reduction where storeId = #{storeId} and endTime >= #{curTime}
        and (
        (endTime &gt; #{startTime} and startTime &lt; #{endTime})
        or (startTime &lt; #{endTime} and endTime &gt; #{startTime})
        or ((startTime &gt;= #{startTime}) and (endTime &lt;= #{endTime})))
        and id not in
        <foreach collection="promoteSalesId" index="index" item="salesId" open="(" close=")" separator=",">
            #{salesId}
        </foreach>
    </select>
    <select id="getStorePromoteSalesTimes" resultType="java.lang.String">
        select startTime
        from store_full_reduction where storeId = #{storeId} and endTime &gt; #{curTime} group by startTime
    </select>
    <select id="getStorePromoteSalesInfo" resultType="com.modcreater.tmbeans.pojo.StoreFullReduction">
        select * from store_full_reduction where storeId = #{storeId} and startTime = #{time}
    </select>
    <select id="getStoreOverduePromoteSalesTimes" resultType="java.lang.String">
        select startTime
        from store_full_reduction where storeId = #{storeId} and endTime &lt;= #{curTime} group by startTime
    </select>
    <select id="getStoreFullReduction" resultType="com.modcreater.tmbeans.pojo.StoreFullReduction">
        select * from store_full_reduction where storeId = #{storeId} and startTime = #{time}
    </select>
    <select id="getStoreFullReductionTime" resultType="java.lang.String">
        select startTime from store_full_reduction where id = #{promoteSalesId}
    </select>
</mapper>